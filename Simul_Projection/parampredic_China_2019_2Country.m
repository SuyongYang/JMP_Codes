% Demographic Structure and Macroeconomic Trends - Aksoy, Basso, Smith, Grasl 
% This code imports the UN prediction data for each country to be used as
% input.
%function [pred_param] = parampredic(flag)

%Flag is the number that refers to the country
% Australia	1
% Austria	2
% Belgium	3
% Canada	4
% Denmark	5
% Finland	6
% France	7
% Germany	8
% Greece	9
% Iceland	10
% Ireland	11
% Italy	12
% Japan	13
% Netherlands	14
% New Zealand	15
% Norway	16
% Portugal	17
% Spain	18
% Sweden	19
% Switzerland	20
% United Kingdom	21
% United States of America	22

% load ProjecPopData.csv;
% load HistPopData.txt;
% Countries = fileread('listcountries.txt');

%get weights
% mh = size(HistPopData,1);
% mp = size(ProjecPopData,1);
% Popweights = zeros(mh+mp,3);
% for i = 1:mh
%     sumpop = sum(HistPopData(i,1:end));
%     Popweights(i,1) = sum(HistPopData(i,1:4))/sumpop;
%     Popweights(i,2) = sum(HistPopData(i,5:12))/sumpop;
%     Popweights(i,3) = sum(HistPopData(i,13:end))/sumpop;
% end
% for i = 1:mp
%     sumpop = sum(ProjecPopData(i,1:end));
%     Popweights(mh+i,1) = sum(ProjecPopData(i,1:4))/sumpop;
%     Popweights(mh+i,2) = sum(ProjecPopData(i,5:12))/sumpop;
%     Popweights(mh+i,3) = sum(ProjecPopData(i,13:end))/sumpop;
% end
% 


% i = flag;
% totpophist = sum(HistPopData(:,1:end),2);
% totpopproj = sum(ProjecPopData(:,1:end),2);
% totpop = [totpophist(1+16*(i-1):16+16*(i-1)); totpopproj(1+85*(i-1):85+85*(i-1))];
% DW(:,:) = [Popweights(1+16*(i-1):16+16*(i-1),:); Popweights(mh+1+85*(i-1):mh+85+85*(i-1),:)]; 

totpop = [ 1427648
1433784
1439323.856
1444152.909
1448402.546
1452096.096
1455256.887
1457908.249
1460073.511
1461776.001
1463039.048
1463885.983
1464340.132
1464421.205
1464134.423
1463481.391
1462463.708
1461082.977
1459342.734
1457254.251
1454830.731
1452085.381
1449031.406
1445679.754
1442032.347
1438088.85
1433848.93
1429312.251
1424480.394
1419362.603
1413970.035
1408313.848
1402405.2
1396256.278
1389883.382
1383303.838
1376534.974
1369594.119
1362499.513
1355273.05
1347937.539
1340515.789
1333030.607
1325503.466
1317950.496
1310386.492
1302826.248
1295284.558
1287773.673
1280295.666
1272850.067
1265436.406
1258054.212
1250702.866
1243381.153
1236087.706
1228821.161
1221580.152
1214364.762
1207180.861
1200035.768
1192936.799
1185891.273
1178907.13
1171994.798
1165165.33
1158429.775
1151799.186
1145283.488
1138888.11
1132617.353
1126475.521
1120466.916
1114592.179
1108837.306
1103184.629
1097616.484
1092115.204
1086663.122
1081242.573
1075835.89
1070425.407
1064993.458]
%start 2018
gpop = diff(log(totpop));
difgpop = gpop - gpop(1);
%start 2019=0
gN_SS = 1+0.01;
%testgpop = gN_SS-1+difgpop;
DW = [0.598717582	0.16387576
0.595781903	0.168408788
0.592135881	0.173537265
0.588795104	0.178160141
0.584531787	0.183819157
0.579499424	0.190358886
0.573848366	0.197627229
0.567726529	0.205474679
0.561280039	0.213753652
0.554653806	0.222317889
0.547992045	0.231021912
0.541438744	0.239720539
0.535138075	0.248268448
0.529229202	0.256518916
0.523829796	0.26432102
0.519052816	0.271522171
0.515012324	0.27796865
0.511823765	0.283505224
0.509547772	0.2880322
0.50802039	0.291677952
0.507021288	0.294627735
0.506329547	0.297066871
0.505723118	0.299181221
0.504968817	0.301178614
0.503793186	0.30335265
0.501910047	0.306021094
0.499029316	0.309505688
0.494856341	0.314132878
0.489247073	0.320076499
0.482679488	0.32687972
0.475794303	0.333920905
0.469241634	0.340569208
0.463682415	0.346183193
0.4596222	0.350274895
0.456903588	0.353010796
0.455198637	0.35472586
0.454174266	0.355760315
0.453491543	0.356460379
0.452871745	0.357111783
0.452298762	0.357736068
0.45182365	0.358287302
0.451498656	0.35871848
0.451377265	0.358981478
0.451490566	0.359047877
0.451775152	0.358972483
0.452142224	0.358832444
0.452500912	0.358706699
0.452758212	0.358676034
0.452835045	0.358808894
0.452715325	0.359118062
0.452398918	0.359602199
0.451885718	0.360259909
0.451175645	0.361089735
0.450274572	0.362084329
0.449212387	0.36321267
0.448025702	0.364437083
0.446752013	0.365718988
0.445429716	0.367018882
0.444098196	0.368297335
0.442798076	0.369518031
0.441571051	0.370644785
0.440459832	0.371640536
0.439508159	0.372467336
0.438749233	0.373097995
0.43817047	0.373551578
0.437747238	0.37385943
0.437454273	0.374053689
0.437265668	0.374167295
0.437155843	0.37423187
0.437102534	0.374271243
0.437083926	0.374307654
0.437077691	0.374363843
0.437060999	0.374463039
0.437014598	0.374624102
0.436935195	0.374846776
0.436823558	0.375125878
0.43668048	0.3754561
0.436506779	0.375832021
0.436303289	0.376248115
0.436070857	0.376698761
0.435810339	0.377178245
0.435522593	0.377680764
0.435208476	0.378200434    ];
% 2018 start
dDW_3g = diff(DW);
% 2019 start 
for iii = 1:40
                %dd_old = 1+gpop(5+iii) ;
                dd = gN_SS + difgpop(1+iii);
                eval(['gn_' num2str(iii) '= dd;'])
                dd = dDW_3g(1+iii,1) ;
                eval(['dws_' num2str(iii) '= dd;'])
                dd = dDW_3g(1+iii,2) ;
                eval(['drs_' num2str(iii) '= dd;'])
                
end

save pred_param_China_2019 drs_1 drs_2 drs_3 drs_4 drs_5 drs_6 drs_7 drs_8 drs_9 drs_10 drs_11 drs_12 drs_13 drs_14 drs_15 drs_16 drs_17 drs_18 drs_19 drs_20 drs_21 drs_22 drs_23 drs_24 drs_25 drs_26 drs_27 drs_28 drs_29 drs_30 drs_31 drs_32 drs_33 drs_34 drs_35 drs_36 drs_37 drs_38 drs_39 drs_40 dws_1 dws_2 dws_3 dws_4 dws_5 dws_6 dws_7 dws_8 dws_9 dws_10 dws_11 dws_12 dws_13 dws_14 dws_15 dws_16 dws_17 dws_18 dws_19 dws_20 dws_21 dws_22 dws_23 dws_24 dws_25 dws_26 dws_27 dws_28 dws_29 dws_30 dws_31 dws_32 dws_33 dws_34 dws_35 dws_36 dws_37 dws_38 dws_39 dws_40 gn_1 gn_2 gn_3 gn_4 gn_5 gn_6 gn_7 gn_8 gn_9 gn_10 gn_11 gn_12 gn_13 gn_14 gn_15 gn_16 gn_17 gn_18 gn_19 gn_20 gn_21 gn_22 gn_23 gn_24 gn_25 gn_26 gn_27 gn_28 gn_29 gn_30 gn_31 gn_32 gn_33 gn_34 gn_35 gn_36 gn_37 gn_38 gn_39 gn_40 

%pred_param = Countries(1+15*(i-1):15+15*(i-1));






